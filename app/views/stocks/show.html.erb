

<div class="container">
  <div class="row">
    <br><br><br>
    <h2><center><%= @stock.company_name %>  (<%= @stock.ticker %>) </h2>
      <br><br><br>
    <table>
      <thead>
        <tr>

          <th>Company</th>
          <th>Ticker</th>
          <th>Current Price</th>
          <th>Price Change</th>
          <th>Percent Change</th>
          <th>Day's High</th>
          <th>Day's Low</th>
          <th>Day's Range</th>
          <th>Year High</th>
          <th>Year Low</th>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td><%= @stock.company_name %></td>
          <td><%= @called_stock.symbol %></td>
          <td>$<%= @called_stock.ask %></td>
          <td>$<%= @called_stock.change %></td>
          <td><%= @called_stock.changein_percent %></td>
          <td>$<%= @called_stock.days_high %></td>
          <td>$<%= @called_stock.days_low %></td>
          <td>$ <%= @called_stock.days_range %></td>
          <td>$<%= @called_stock.year_high %></td>
          <td>$<%= @called_stock.year_low %></td>
        </tr>
      </tbody>
    </table>

  </div>


  <hr>
  <div class="row">
    <div class="col s8">
      <div>
        <h4 class="his"><center><i>HISTORICAL</i></h4>
          <h4 class="his"><center>DATA</h4>
            <h4 class="his"><center><i>CHART</i></h4>
      </div>

    </div>
    <div class="col s4">
      <div id="new_input">
        <br>
        Stock: <input type="text" name="stock" id="stock" value= "<%= @stock.ticker %>"
        style="width: 70px;">
        <br>
        Start: <input type="text" name="start" id="start" value="2017-01-01"
        style="width: 80px;">
        <br>
        End: <input type="text" name="end" id="end" value="<%= Date.today %>"
        style="width: 80px;">
        <br>
        <input name="updateButton"
        type="button"
        value="UPDATE"
        onclick="updateData()" />
      </div>

    </div>

  </div>

    <div class="col m 12">
      <div class="chart">
      </div>

</div>
</div>
<br><br>



<script>

// Set the dimensions of the graph
var margin = {top: 30, right: 40, bottom: 30, left: 50},
    width = 1000 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;

// Parse the date / time
var parseDate = d3.time.format("%Y-%m-%d").parse;

// Set the ranges
var x = d3.time.scale().range([0, width]);
var y = d3.scale.linear().range([height, 0]);

var xAxis = d3.svg.axis().scale(x)
    .orient("bottom").ticks(5);

var yAxis = d3.svg.axis().scale(y)
    .orient("left").ticks(5);

var valueline = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.high); });


var svg = d3.select(".chart")
    .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform", "translate("
            + margin.left
            + "," + margin.top + ")");

var stock = document.getElementById('stock').value;
var start = document.getElementById('start').value;
var end = document.getElementById('end').value;

var inputURL = "https://query.yahooapis.com/v1/public/yql"+
    "?q=select%20*%20from%20yahoo.finance.historicaldata%20"+
    "where%20symbol%20%3D%20%22"
    +stock+"%22%20and%20startDate%20%3D%20%22"
    +start+"%22%20and%20endDate%20%3D%20%22"
    +end+"%22&format=json&env=store%3A%2F%2F"
    +"datatables.org%2Falltableswithkeys";

    // Get the data
    d3.json(inputURL, function(error, data){

    data.query.results.quote.forEach(function(d) {
        d.date = parseDate(d.Date);
        d.high = +d.High;
        d.low = +d.Low;
    });

    // Scale the range of the data
    x.domain(d3.extent(data.query.results.quote, function(d) {
        return d.date; }));
    y.domain([
        d3.min(data.query.results.quote, function(d) { return d.low; }),
        d3.max(data.query.results.quote, function(d) { return d.high; })
    ]);

    svg.append("path")        // Add the valueline path.
        .attr("class", "line")
        .attr("d", valueline(data.query.results.quote));

    svg.append("g")            // Add the X Axis
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    svg.append("g")            // Add the Y Axis
        .attr("class", "y axis")
        .call(yAxis);

    svg.append("text")          // Add the label
        .attr("class", "label")
        .attr("transform", "translate(" + (width+3) + ","
            + y(data.query.results.quote[0].high) + ")")
        .attr("dy", ".35em")
        .attr("text-anchor", "start")
        .style("fill", "steelblue")
        .text("high");

    svg.append("text")          // Add the title shadow
        .attr("x", (width / 2))
        .attr("y", margin.top / 2)
        .attr("text-anchor", "middle")
        .attr("class", "shadow")
        .style("font-size", "16px")
        .text(stock);

    svg.append("text")          // Add the title
        .attr("class", "stock")
        .attr("x", (width / 2))
        .attr("y", margin.top / 2)
        .attr("text-anchor", "middle")
        .style("font-size", "16px")
        .text(stock);
});

// ** Update data section (Called from the onclick)
function updateData() {

var stock = document.getElementById('stock').value;
var start = document.getElementById('start').value;
var end = document.getElementById('end').value;

var inputURL = "https://query.yahooapis.com/v1/public/yql"+
    "?q=select%20*%20from%20yahoo.finance.historicaldata%20"+
    "where%20symbol%20%3D%20%22"
    +stock+"%22%20and%20startDate%20%3D%20%22"
    +start+"%22%20and%20endDate%20%3D%20%22"
    +end+"%22&format=json&env=store%3A%2F%2F"
    +"datatables.org%2Falltableswithkeys";

    // Get the data again
    d3.json(inputURL, function(error, data){

        data.query.results.quote.forEach(function(d) {
            d.date = parseDate(d.Date);
            d.high = +d.High;
            d.low = +d.Low;
        });

        // Scale the range of the data
        x.domain(d3.extent(data.query.results.quote, function(d) {
            return d.date; }));
        y.domain([
            d3.min(data.query.results.quote, function(d) {
                return d.low; }),
            d3.max(data.query.results.quote, function(d) {
                return d.high; })
        ]);

        // Select the section we want to apply our changes to
        var svg = d3.select("body").transition();

        // Make the changes
        svg.select(".line")    // change the line
            .duration(750)
            .attr("d", valueline(data.query.results.quote));

        svg.select(".label")   // change the label text
            .duration(750)
            .attr("transform", "translate(" + (width+3) + ","
            + y(data.query.results.quote[0].high) + ")");

        svg.select(".shadow") // change the title shadow
            .duration(750)
            .text(stock);

        svg.select(".stock")   // change the title
            .duration(750)
            .text(stock);

        svg.select(".x.axis") // change the x axis
            .duration(750)
            .call(xAxis);
        svg.select(".y.axis") // change the y axis
            .duration(750)
            .call(yAxis);

    });
}

</script>
